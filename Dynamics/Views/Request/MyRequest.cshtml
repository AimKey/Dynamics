@using Dynamics.Utility
@model List<Dynamics.Models.Models.Dto.RequestOverviewDto>

@{
    ViewData["Title"] = "My Request";
    User currentUser = Accessor.HttpContext.Session.GetCurrentUser();
    if (currentUser != null) ViewBag.userID = currentUser.UserID;
}

<main class="w-full h-full flex flex-col gap-6 items-center p-16">
    <a asp-action="Create" asp-controller="Request" class="my-5">
        <button id="createOrgBtn" class="btn btn-primary btn-wide">
            Create new request
        </button>
    </a>
    <h1 class="text-3xl">Manage your requests</h1>
    <div class="flex w-full justify-end items-center gap-2 mb-3">
        <!-- Search form -->
        <form asp-action="MyRequest" method="get" class="flex gap-2 items-center">
            <label class="input input-bordered flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor"
                     class="h-4 w-4 opacity-70 align-middle">
                    <path fill-rule="evenodd"
                          d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z"
                          clip-rule="evenodd"/>
                </svg>
                <input type="text" name="searchQuery" class="grow align-middle" placeholder="Search something..."/>
            </label>

            <!-- Filter dropdown -->
            <input type="hidden" name="filterQuery" id="filterQuery"/>
            <div class="dropdown dropdown-end">
                <div tabindex="0" role="button" id="filterButton" class="btn btn-outline m-1">Filter</div>
                <ul tabindex="0" class="dropdown-content menu bg-base-100 rounded-box border z-[1] w-52 p-2 shadow-md">
                    <li>
                        <a onclick="setFilter('All')">All</a>
                    </li>
                    <li>
                        <a onclick="setFilter('Title')">Title</a>
                    </li>
                    <li>
                        <a onclick="setFilter('Location')">Location</a>
                    </li>
                    <li>
                        <a onclick="setFilter('Content')">Content</a>
                    </li>
                </ul>
            </div>
        </form>
    </div>
    @if (!Model.Any())
    {
        <h4>No request found!</h4>
    }
    else
    {
        <div class="flex justify-center w-full">
            <ul class="flex gap-4 flex-wrap w-full justify-center container">
                @foreach (var item in Model)
                {
                <partial name="CustomComponent/OverviewCard/RequestOverview" model="item" />
                }
            </ul>
        </div>
    }

    <div class="pagination mt-4 flex justify-center space-x-1.5">
        @if (ViewBag.currentPage > 1)
        {
            <a href="@Url.Action("MyRequest", new { pageNumber = ViewBag.currentPage - 1, pageSize = 12 })">
                <button class="btn bg-white text-black rounded-lg border-solid">Previous</button>
            </a>
        }

        @for (int i = 1; i <= ViewBag.totalPages; i++)
        {
            <a href="@Url.Action("MyRequest", new { pageNumber = i, pageSize = 12 })"
               class="@(ViewBag.currentPage == i ? "btn-primary" : "")">
                <button class="btn bg-white text-black rounded-lg border-solid">@i</button>
            </a>
        }

        @if (ViewBag.currentPage < ViewBag.totalPages)
        {
            <a href="@Url.Action("MyRequest", new { pageNumber = ViewBag.currentPage + 1, pageSize = 12 })">
                <button class="btn bg-white text-black rounded-lg border-solid">Next</button>
            </a>
        }
    </div>
</main>
<script>
        function setFilter(filter) {
            document.getElementById("filterQuery").value = filter;
            document.getElementById("filterButton").innerHTML = filter;
        }
    </script>