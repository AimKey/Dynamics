@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject IHttpContextAccessor Accessor
@inject IProjectRepository projectRepository
@model Dynamics.Models.Models.ViewModel.DetailProjectVM
@{
    ViewData["Title"] = "Manage Project";
    Layout = "~/Views/Shared/_LayoutProject.cshtml";
    // take current user
    var userIDString = Accessor.HttpContext.Session.GetString("currentUserID");
    var currentProjectID = Accessor.HttpContext.Session.GetString("currentProjectID");
    var allProjectMember = projectRepository.FilterProjectMember(p => p.ProjectID.Equals(new Guid(currentProjectID)), "User");
    Report report = new Report();
    var beMember = 0;
    if (allProjectMember != null)
    {
        if (!allProjectMember.Any(p => p.UserID.Equals(new Guid(userIDString))))
        {//no join request
            beMember = -1;
        }
        else if (allProjectMember.Any(p => p.UserID.Equals(new Guid(userIDString)) && p.Status == 0))
        {//join request
            beMember = 0;
        }
        else if (allProjectMember.Any(p => p.UserID.Equals(new Guid(userIDString)) && p.Status >= 1))
        {//is member
            beMember = 1;
        }          
    }
    string[] projectImages = new string[1] { ","};
    if (Model.CurrentProject.Attachment != null)
    {
        projectImages = Model.CurrentProject.Attachment.TrimEnd(',', ' ').Split(",");
    }
    
}

<!-- container start -->
<div class="m-w-screen-2xl flex  justify-start relative">
    @if (Model.CurrentLeaderProject.UserID.Equals(new Guid(userIDString)))
    {
        <!-- edit button -->
        <a asp-action="UpdateProjectProfile" asp-route-id="@Model.CurrentProject.ProjectID" title="Edit project profile">
            <button type="button"
            class="absolute top-5 w-fit h-fit mx-2 my-2 p-2 " style="right:-5px;">
                <i class="fa-solid fa-pen-to-square text-4xl text-gray-900"></i>
            </button>
        </a>
    }
    <div class="relative my-14 ml-8 mr-4 flex flex-col text-xl" style="width: 66%">
        <!-- part 1-image -->
        <div class="ml-14 max-w-5xl w-full justify-end items-center">
            <div class="relative items-center">
                <!-- Main image container -->
                <div id="carousel" class=" bg-gray-300 rounded-lg overflow-hidden" style="height:32rem;width:65rem;">
                    <!-- Images will be inserted here by JavaScript -->
                </div>
            </div>

            <!-- Indicator dots  -->
            <div class="flex justify-center my-10 mt-4 space-x-2 relative">
                <!-- Navigation buttons -->
                
                @foreach (var img in projectImages)
                {
                    <div onclick="updateCarouselAsUserWant('@img')" class=" relative w-20 h-20 bg-gray-300 rounded-xl mr-2 hover:ring-4 hover:ring-blue-500 cursor-pointer">
                        <img src="@img" class="w-full h-full items-center rounded-xl">
                        </div>
                }
                <button id="prevBtn"
                        class="absolute top-10  transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md" style="left:14rem;">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                         xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7">
                        </path>
                    </svg>
                </button>
                <button id="nextBtn"
                        class="absolute top-10 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md" style="right:14rem;">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                         xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7">
                        </path>
                    </svg>
                </button>
            </div>
        </div>
        <!-- end part 1-image -->
        <div class="border-t p-6 ">
            <h2 class="font-semibold mb-2 text-black text-3xl">Contact Information:</h2>
            <p class="text-gray-600">✉ @Model.CurrentProject.Email</p>
            <p class="text-gray-600">📞 @Model.CurrentProject.PhoneNumber</p>
            <p class="text-gray-600">🏠 @Model.CurrentProject.Address</p>
        </div>
            <div class="border-t p-4 mt-0">
                <h2 class="font-semibold mb-2 text-black text-3xl">Time Line</h2>
                <p class="text-gray-600">Start Date: @Model.CurrentProject.StartTime</p>
                <p class="text-gray-600">End Date: @Model.CurrentProject.EndTime</p>
                @if(Model.CurrentProject.ProjectStatus== 1)
                {
                <p class="text-gray-600">Status: <span class="text-red-700 font-semibold">Pending</span></p>
            }
            else if(Model.CurrentProject.ProjectStatus==2)
            {
                <p class="text-gray-600">Status: <span class="text-red-700 font-semibold">In progress</span></p>
            }
            else
            {
                <p class="text-gray-600">Status: <span class="text-red-700 font-semibold">Completed</span></p>
                }
            </div>
        <div class="border-t p-4 mt-0">
            <h2 class="font-semibold mb-2 text-black text-3xl">Description</h2>
            <p class="text-gray-600 line-clamp-3">
              @Model.CurrentProject.ProjectDescription
            </p>
            <a href="#" class="text-gray-400 flex justify-center font-normal">View more...</a>
        </div>
        <div class="border-t p-4 mt-0">
            <h2 class="font-semibold mb-2 text-black text-3xl">Organizer</h2>
            <div class="flex justify-start">
                <div>
                    <img class="rounded-full w-14 h-14 mx-4 mb-4"
                             src="@Model.CurrentLeaderProject.UserAvatar"
                         alt="avatar">
                </div>
                <div class="flex flex-col ">
                    <p class="text-gray-600 font-normal">
                        Project leader: <span class="text-black font-bold">
                           @Model.CurrentLeaderProject.UserFullName
                        </span>
                    </p>
                        <p class="text-gray-400 font-normal text-base ">Address: @Model.CurrentLeaderProject.UserAddress</p>
                </div>
            </div>
            <div class="flex justify-start">
                <div>
                    <img class="rounded-full w-14 h-14 mx-4 mb-4"
                         src="@Model.CurrentProject.Request?.User.UserAvatar"
                         alt="avatar">
                </div>
                <div class="flex flex-col ">
                    <p class="text-gray-600 font-normal">
                        Requester: <span class="text-black font-bold">
                                @Model.CurrentProject.Request?.User.UserFullName
                        </span>
                    </p>
                        <p class="text-gray-400 font-normal text-base ">Address: @Model.CurrentProject.Request?.User.UserAddress</p>
                </div>
            </div>
        </div>
        <div class="border-t p-4 mt-0">
            <h2 class="font-semibold mb-2 text-black text-3xl">Donors</h2>
            @foreach (var item in Model.Random5Donors)
            {
                <div class="flex justify-between items-center p-4 shadow-md shadow-green-500/30  rounded-3xl mb-4">
                    <div class="flex justify-start items-center mx-0 my-0">
                    <div>
                        <img class="rounded-full w-14 h-14 mx-4"
                             src="@item.User.UserAvatar"
                             alt="avatar">
                    </div>
                    <div class="flex flex-col ">
                        <p class="text-black font-bold">@item.User.UserFullName</p>
                        <p class="text-gray-400 font-normal text-base ">Donate on @item.Time</p>
                    </div>
                </div>
                <p class="text-green-700 font-semibold ">@item.Amount @item.Resource?.ResourceName</p>
            </div>
            }
            <a asp-action="ManageProjectDonor" asp-route-projectID="@currentProjectID" class="text-gray-400 flex justify-center font-normal">See more donors...</a>

        </div>
    </div>


    <!-- part 1-fundraising -->
    <!-- when using fixed+relative, need to modify top-bottom-left-right to specify the object at fixed/absolute -->
        <div style="width:28%;" class="sticky top-20 right-15 h-fit flex justify-start">
    <div class=" flex flex-col text-4xl justify-start shadow-2xl p-6 my-10 mx-2 rounded-3xl bg-white">
        <span class=" font-bold text-green-500 p-2 tex-6xl">Raised @Model.CurrentAmountOfMoneyDonate VND</span>
        <div class="w-full bg-gray-200 rounded-full h-3 dark:bg-gray-700 ">
            <div class="bg-green-500 h-3 rounded-full" style="width: @Model.ProgressDonate%"></div>
        </div>
        <span class=" font-normal text-gray-500 p-2 text-2xl">
            pledged of <span class="font-bold text-black text-4xl">@Model.ExpectedAmountOfMoneyDonate</span> VND goal
        </span>

        <div class="flex font-normal text-gray-500 flex-col p-2 text-2xl">
            <span class="text-black font-bold text-4xl">@Model.NumberOfProjectContributor</span>
            <div>Contributors</div>
        </div>
        <div class="flex font-normal text-gray-500 flex-col p-2 text-2xl">
            <span class="text-black font-bold text-4xl">@Model.TimeLeftEndDay</span>
            <div>days till the end</div>
        </div>
        <a asp-action="SendDonateRequest" asp-route-projectid="@currentProjectID" asp-route-donor="User">
                <button type="button" style="width:98%;"
                class="text-gray-900 bg-green-500 from-teal-200 to-lime-200 hover:bg-gradient-to-l hover:from-teal-200 hover:to-lime-200 focus:ring-4 focus:outline-none focus:ring-lime-200 dark:focus:ring-teal-700 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
            Donate
            this project
        </button>
            </a>
            @if (beMember==-1)
            {
                <a asp-action="JoinProjectRequest" asp-route-memberid="@(new Guid(userIDString))" asp-route-projectid="@currentProjectID">
                    <button style="width:98%;" class=" relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-blue-600 group-hover:from-green-400 group-hover:to-blue-600 hover:text-white focus:ring-4 focus:outline-none focus:ring-green-200 dark:focus:ring-green-800">
                        <span class="relative w-full px-5 py-2.5  transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0">
                        Join this project
                    </span>
                </button>
                </a>
            }
            else if(beMember==0)
            {
                <a asp-action="JoinProjectRequest" asp-route-memberid="@(new Guid(userIDString))" asp-route-projectid="@currentProjectID">
                    <button style="width:98%;" class=" relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-blue-600 group-hover:from-green-400 group-hover:to-blue-600 hover:text-white focus:ring-4 focus:outline-none focus:ring-green-200 dark:focus:ring-green-800">
                        <span class=" relative w-full px-5 py-2.5  transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0">
                            Processing join request
                        </span>
                    </button>
                </a>           
            }
            else if(beMember==1)
            {
                <a asp-action="LeaveProjectRequest" asp-route-memberid="@(new Guid(userIDString))" asp-route-projectid="@currentProjectID">
                    <button style="width:98%;"class="  relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-blue-600 group-hover:from-green-400 group-hover:to-blue-600 hover:text-white focus:ring-4 focus:outline-none focus:ring-green-200 dark:focus:ring-green-800">
                        <span class="relative w-full px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0">
                            Leave this project
                        </span>
                    </button>
                </a>
            }
            <button onclick="showReportForm()" type="button" class="relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800">
            <span class="relative w-full px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0">
                Report
            </span>
        </button>
    </div>
    @* report form *@
        <div id="Overlay" class="fixed inset-0 bg-black opacity-60 z-40 hidden"></div>

        <div id="ReportForm" class="fixed hidden bg-white bg-opacity-70 w-1/4 mx-auto flex-col shadow-md shadow-gray-500/30 p-6 rounded-md my-10 z-50" style="top: 50%; left: 50%; transform: translate(-50%, -50%);">
            <h2 class="font-serif text-black font-bold text-3xl text-center mb-4">Report project</h2>

            <!-- form report -->
            <form method="post" asp-action="SendReportProjectRequest" asp-controller="Project">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="@report.ObjectID" value="@currentProjectID" />
                <div class="grid grid-cols-1 gap-y-3">
                    <div>
                        <label asp-for="@report.Reason" class="block mb-2 text-md font-medium text-gray-900">Enter reason to report project</label>
                        <textarea asp-for="@report.Reason" id="Reason" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-white bg-opacity-70 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 " placeholder="Write reason here..."></textarea>
                        <span asp-validation-for="@report.Reason" class="text-danger"></span>
                    </div>
                </div>
                <div class="flex justify-center items-center gap-x-6">
                    <button type="submit"
                            class="mt-4 text-md text-white bg-red-500 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-bold rounded-lg w-full sm:w-auto px-5 py-2.5 text-center">
                        Report
                    </button>
                    <button onclick="cancelReportForm()" type="reset"
                            class="mt-4 text-md text-white bg-blue-800 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-bold rounded-lg w-full sm:w-auto px-5 py-2.5 text-center">
                        Cancel
                    </button>
                </div>

            </form>
            <!-- end form report -->
        </div>
        </div>
</div>

<script>
    @* handle carousel *@
    const carousel = document.getElementById('carousel');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const images = @Html.Raw(Json.Serialize(projectImages));

    let currentIndex = 0;

    function updateCarouselAsUserWant(src) {
        // Update the carousel with the selected image
        carousel.innerHTML = `<img src="${src}" class="w-full object-cover items-center cursor-pointer" alt="Project image" style="height: 40rem;">`;

        const srcFilename = src.split('/').pop(); // Get the file name from the src
        const indicators = document.querySelectorAll('.flex.justify-center.mt-4.space-x-2 > div > img');

        // Loop through each indicator to compare its src with the selected image src
        indicators.forEach((indicator) => {
            const indicatorFilename = indicator.src.split('/').pop(); // Get the file name from the indicator src

            // Compare the filenames of the indicator's img and the selected image
            if (indicatorFilename === srcFilename) {
                // Apply special class to highlight the current image (e.g., a mask or border)
                indicator.classList.add('ring-4', 'ring-blue-500');
            } else {
                // Remove the highlight from other images
                indicator.classList.remove('ring-4', 'ring-blue-500');
            }
        });
    }
    function updateCarousel() {
        carousel.innerHTML = `<img src="${images[currentIndex]}" class="w-full object-cover items-center" alt="Project image" style="height: 40rem;">`;
        updateIndicators();
    }

    function updateIndicators() {
        // Select all the image indicators
        const indicators = document.querySelectorAll('.flex.justify-center.mt-4.space-x-2 > div > img');
        indicators.forEach((indicator, index) => {
            if (index === currentIndex) {
                // Apply special class to highlight the current image (e.g., a mask or border)
                indicator.classList.add('ring-4', 'ring-blue-500');
            } else {
                // Remove the highlight from other images
                indicator.classList.remove('ring-4', 'ring-blue-500');
            }
        });
    }

    prevBtn.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        updateCarousel();
    });

    nextBtn.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % images.length;
        updateCarousel();
    });

    // Initialize the carousel
    updateCarousel();

   @*  hide/show report form *@
        function showReportForm() {
            console.log("Trying to show form for: report form");
            var Overlay = document.getElementById('Overlay');
            var reportForm = document.getElementById('ReportForm');
            if (reportForm && Overlay) {
                document.getElementById('Overlay').classList.remove('hidden');
                Overlay.style.display = 'block';  // Show the form
                reportForm.style.display = 'block';  // Show the form
            } else {
                console.error("Element not found for itemID:", itemID);
            }
        }

    function cancelReportForm() {
        var Overlay = document.getElementById('Overlay');
        var reportForm = document.getElementById('ReportForm');
        if (reportForm && Overlay) {
            Overlay.style.display = 'none';  // Hide the form
            reportForm.style.display = 'none';  // Hide the form
        } else {
            console.error("Element not found for itemID:", itemID);
        }
    }
</script>